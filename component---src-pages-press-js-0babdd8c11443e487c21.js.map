{"version":3,"sources":["webpack:///./src/components/press/Item.jsx","webpack:///./src/components/press/Grid.jsx","webpack:///./src/components/press/Article.jsx","webpack:///./src/pages/press.js","webpack:///./src/components/ExternalLink.jsx"],"names":["StyledItem","styled","a","Item","image","title","onClick","role","fixed","thumb","alt","style","margin","StyledGrid","div","Grid","items","useState","currentImage","setCurrentImage","console","log","map","x","idx","key","onClose","currentIndex","views","src","sharp","fluid","StyledArticle","Article","frontmatter","html","url","ExternalLink","href","gallery","website","name","dangerouslySetInnerHTML","__html","images","query","PressPage","edges","data","allFile","Layout","SEO","Container","node","childMarkdownRemark","children","target","rel"],"mappings":"qSAKMA,EAAaC,IAAOC,EAAV,sEAAGD,CAAH,gFAsBDE,EAbF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,QAAjB,OACX,kBAACN,EAAD,CAAYO,KAAM,SAAUD,QAASA,GACnC,kBAAC,IAAD,CAAKE,MAAOJ,EAAMK,MAAMD,MAAOE,IAAKL,IACpC,uBAAGM,MAAO,CAAEC,OAAQ,IAAMP,KCVxBQ,EAAaZ,IAAOa,IAAV,mEAAGb,CAAH,mJAgDDc,EAvCF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACcC,oBAAU,GAA3CC,EADmB,KACLC,EADK,KAY1B,OADAC,QAAQC,IAAIL,GAEV,oCACE,kBAACH,EAAD,KACGG,EAAMM,KAAI,SAACC,EAAGC,GAAJ,OACT,kBAAC,EAAD,eAAMC,IAAKD,EAAKlB,QAAS,WAZ/Ba,EAYkDK,KAAUD,QAG1D,kBAAC,IAAD,KACGL,GAAgB,GACf,kBAAC,IAAD,CAAOQ,QAdO,WACpBP,GAAiB,KAcT,kBAAC,IAAD,CACEQ,aAAcT,EACdU,MAAOZ,EAAMM,KAAI,kBAAsC,CACrDO,IADe,EAAGzB,MAAS0B,MAASC,MACzBF,cClCrBG,EAAgB/B,IAAOa,IAAV,yEAAGb,CAAH,6LAmDJgC,EA/BC,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,KAAhB,OACd,kBAACH,EAAD,KACGE,EAAYE,IACX,kBAACC,EAAA,EAAD,CAAcC,KAAMJ,EAAYE,KAC9B,4BAAKF,EAAY7B,QAGnB,4BAAK6B,EAAY7B,OAElB6B,EAAYK,SACX,+CACW,IACRL,EAAYK,QAAQC,QACnB,kBAACH,EAAA,EAAD,CAAcC,KAAMJ,EAAYK,QAAQC,SACrCN,EAAYK,QAAQE,MAGvB,oCAAGP,EAAYK,QAAQE,OAI5BN,GAAQ,uBAAGO,wBAAyB,CAAEC,OAAQR,KAC/C,kBAAC,EAAD,CAAMnB,MAAOkB,EAAYU,WCfhBC,GAFEC,UAvBG,SAAC,GAAD,IAEHC,EAFG,EAChBC,KACEC,QAAWF,MAFG,OAKhB,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK9C,MAAO,0BACZ,kBAAC+C,EAAA,EAAD,KACGL,EAAMzB,KAAI,SAACC,EAAGC,GAAJ,OACT,kBAAC,EAAD,CACEC,IAAKD,EACLU,YAAaX,EAAE8B,KAAKC,oBAAoBpB,YACxCC,KAAMZ,EAAE8B,KAAKC,oBAAoBnB,aAazB,e,kCClClB,yBAoBeE,IAjBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMiB,EAAT,EAASA,SAAUjD,EAAnB,EAAmBA,QAAnB,OACnB,uBACEgC,KAAMA,EACNkB,OAAQ,SACRC,IAAK,sBACLnD,QAASA,GAERiD","file":"component---src-pages-press-js-0babdd8c11443e487c21.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Img from 'gatsby-image/withIEPolyfill';\nimport styled from 'styled-components';\n\nconst StyledItem = styled.a`\n  cursor: pointer;\n  text-align: center;\n  img {\n    border: 1px solid lightgrey;\n    margin: 0;\n  }\n`;\n\nconst Item = ({ image, title, onClick }) => (\n  <StyledItem role={'button'} onClick={onClick}>\n    <Img fixed={image.thumb.fixed} alt={title} />\n    <p style={{ margin: 0 }}>{title}</p>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  image: PropTypes.object,\n  title: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Item;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nimport Item from './Item';\n\nconst StyledGrid = styled.div`\n  margin: 2rem 0;\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Grid = ({ items }) => {\n  const [currentImage, setCurrentImage] = useState(-1);\n\n  const openLightbox = index => {\n    setCurrentImage(index);\n  };\n\n  const closeLightbox = () => {\n    setCurrentImage(-1);\n  };\n\n  console.log(items);\n  return (\n    <>\n      <StyledGrid>\n        {items.map((x, idx) => (\n          <Item key={idx} onClick={() => openLightbox(idx)} {...x} />\n        ))}\n      </StyledGrid>\n      <ModalGateway>\n        {currentImage >= 0 && (\n          <Modal onClose={closeLightbox}>\n            <Carousel\n              currentIndex={currentImage}\n              views={items.map(({ image: { sharp: { fluid } } }) => ({\n                src: fluid.src,\n              }))}\n            />\n          </Modal>\n        )}\n      </ModalGateway>\n    </>\n  );\n};\n\nGrid.propTypes = {\n  items: PropTypes.array,\n};\n\nexport default Grid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport ExternalLink from '../ExternalLink';\nimport Grid from './Grid';\n\nconst StyledArticle = styled.div`\n  padding: 1rem 0;\n  &:first-child {\n    padding: 0 0 1rem;\n  }\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  &:last-child {\n    border-bottom: 0px;\n  }\n  a {\n    color: rgba(0, 0, 0, 0.8);\n  }\n  h2 {\n    margin-bottom: 0;\n  }\n  p {\n    margin-top: 2rem;\n  }\n`;\n\nconst Article = ({ frontmatter, html }) => (\n  <StyledArticle>\n    {frontmatter.url ? (\n      <ExternalLink href={frontmatter.url}>\n        <h2>{frontmatter.title}</h2>\n      </ExternalLink>\n    ) : (\n      <h2>{frontmatter.title}</h2>\n    )}\n    {frontmatter.gallery && (\n      <>\n        Galer√≠a:{' '}\n        {frontmatter.gallery.website ? (\n          <ExternalLink href={frontmatter.gallery.website}>\n            {frontmatter.gallery.name}\n          </ExternalLink>\n        ) : (\n          <>{frontmatter.gallery.name}</>\n        )}\n      </>\n    )}\n    {html && <p dangerouslySetInnerHTML={{ __html: html }} />}\n    <Grid items={frontmatter.images} />\n  </StyledArticle>\n);\n\nArticle.propTypes = {\n  frontmatter: PropTypes.object,\n  html: PropTypes.string,\n};\n\nexport default Article;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Container from '../components/Container';\nimport Article from '../components/press/Article';\n\nconst PressPage = ({\n  data: {\n    allFile: { edges },\n  },\n}) => (\n  <Layout>\n    <SEO title={'Prensa y exposiciones'} />\n    <Container>\n      {edges.map((x, idx) => (\n        <Article\n          key={idx}\n          frontmatter={x.node.childMarkdownRemark.frontmatter}\n          html={x.node.childMarkdownRemark.html}\n        />\n      ))}\n    </Container>\n  </Layout>\n);\n\nPressPage.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default PressPage;\n\nexport const query = graphql`\n  query {\n    allFile(\n      filter: { sourceInstanceName: { eq: \"press\" }, extension: { eq: \"md\" } }\n      sort: { fields: childMarkdownRemark___frontmatter___year, order: DESC }\n    ) {\n      edges {\n        node {\n          childMarkdownRemark {\n            html\n            frontmatter {\n              id\n              title\n              year\n              gallery {\n                name\n                website\n              }\n              url\n              images {\n                image {\n                  thumb: childImageSharp {\n                    fixed(quality: 80, width: 250, height: 250, fit: INSIDE) {\n                      ...GatsbyImageSharpFixed_withWebp\n                    }\n                  }\n                  sharp: childImageSharp {\n                    fluid(quality: 80) {\n                      ...GatsbyImageSharpFluid_withWebp\n                    }\n                  }\n                }\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ExternalLink = ({ href, children, onClick }) => (\n  <a\n    href={href}\n    target={'_blank'}\n    rel={'noopener noreferrer'}\n    onClick={onClick}\n  >\n    {children}\n  </a>\n);\n\nExternalLink.propTypes = {\n  href: PropTypes.string,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nexport default ExternalLink;\n"],"sourceRoot":""}