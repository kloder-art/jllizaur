{"version":3,"sources":["webpack:///./src/components/Header.jsx","webpack:///./src/components/Layout.jsx","webpack:///./src/components/SEO.jsx","webpack:///./src/pages/404.js"],"names":["Header","siteTitle","style","marginBottom","padding","margin","to","color","textDecoration","defaultProps","Layout","children","data","site","siteMetadata","title","Date","getFullYear","SEO","description","lang","meta","metaDescription","htmlAttributes","titleTemplate","name","content","property","author","concat","NotFoundPage"],"mappings":"gbAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,aAAa,YAGf,yBACED,MAAO,CACLE,QAAQ,sBAGV,wBAAIF,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACEC,GAAG,IACHJ,MAAO,CACLK,MAAO,QACPC,eAAe,SAGhBP,OAWXD,EAAOS,aAAe,CACpBR,UAAU,IAGGD,Q,UCDAU,IA9BA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQX,UAAWW,EAAKC,KAAKC,aAAaC,QAC1C,yBACEb,MAAO,CACLE,QAAQ,wBAGV,8BAAOO,GACP,sCAAW,IAAIK,MAAOC,cAAtB,gB,mFCtBR,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMN,EAAS,EAATA,MAC9BF,EADuC,OACvCA,KAcFS,EAAkBH,GAAeN,EAAKC,aAAaK,YAEzD,OACE,kBAAC,SAAD,CACEI,eAAgB,CACdH,QAEFL,MAAOA,EACPS,cAAa,QAAUX,EAAKC,aAAaC,MACzCM,KAAM,CACJ,CACEI,KAAK,cACLC,QAASJ,GAEX,CACEK,SAAS,WACTD,QAASX,GAEX,CACEY,SAAS,iBACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASb,EAAKC,aAAac,QAE7B,CACEH,KAAK,gBACLC,QAASX,GAEX,CACEU,KAAK,sBACLC,QAASJ,IAEXO,OAAOR,KAKfH,EAAIT,aAAe,CACjBW,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,kCChFf,wDAaeY,UARM,kBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKf,MAAM,mBACX,yCACA","file":"component---src-pages-404-js-0dd7feb16303e07c751d.js","sourcesContent":["import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'black',\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from './Header';\nimport '../styles/layout.scss';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>Â© {new Date().getFullYear()} JLizaur</footer>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n"],"sourceRoot":""}