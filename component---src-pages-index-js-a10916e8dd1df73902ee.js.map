{"version":3,"sources":["webpack:///./src/components/artwork/Item.jsx","webpack:///./src/components/artwork/Grid.jsx","webpack:///./src/components/artwork/Artwork.jsx","webpack:///./data/artwork/order.js","webpack:///./src/pages/index.js"],"names":["StyledItem","styled","div","span","StyledMeta","Item","image","title","technic","year","width","height","onClick","role","fluid","sharp","objectFit","alt","StyledGrid","Grid","items","useState","currentImage","setCurrentImage","spanX","Math","max","map","x","parseFloat","spanY","idx","key","round","onClose","currentIndex","views","src","StyledArtwork","Artwork","node","childMarkdownRemark","Container","frontmatter","html","dangerouslySetInnerHTML","__html","artwork","query","IndexPage","edges","data","allFile","Layout","SEO","home","order","find","y","id","filter"],"mappings":"4UAKMA,EAAaC,IAAOC,IAAV,mEAAGD,CAAH,iLACO,qBAAGE,KAAgB,MAChB,qBAAGA,KAAgB,MAGf,gBAAGA,EAAH,EAAGA,KAAH,OAAeA,EAAK,GAAK,EAAI,EAAIA,EAAK,MAa9DC,EAAaH,IAAOC,IAAV,mEAAGD,CAAH,2FAgDDI,EApCF,SAAC,GAAD,IACXC,EADW,EACXA,MACAC,EAFW,EAEXA,MACAC,EAHW,EAGXA,QACAC,EAJW,EAIXA,KACAN,EALW,EAKXA,KACAO,EANW,EAMXA,MACAC,EAPW,EAOXA,OACAC,EARW,EAQXA,QARW,OAUX,kBAACZ,EAAD,CAAYG,KAAMA,GAChB,uBAAGU,KAAM,SAAUD,QAASA,GAC1B,kBAAC,IAAD,CAAKE,MAAOR,EAAMS,MAAMD,MAAOE,UAAW,QAASC,IAAKV,KAE1D,kBAACH,EAAD,KACE,4BAAKG,GACL,2BACY,MAATG,GAA2B,MAAVC,GAAqBD,EAAtC,IAA+CC,EAA/C,KACAH,EAFH,KAEcC,M,0uBC9CpB,IAAMS,EAAajB,IAAOC,IAAV,mEAAGD,CAAH,oHAyDDkB,EAhDF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACcC,oBAAU,GAA3CC,EADmB,KACLC,EADK,KAWnBC,EACLC,KAAKC,IAAL,MAAAD,KAAI,EAAQL,EAAMO,KAAI,SAAAC,GAAC,OAAIC,WAAWD,EAAElB,YAAW,EADvCoB,EAEZL,KAAKC,IAAL,MAAAD,KAAI,EAAQL,EAAMO,KAAI,SAAAC,GAAC,OAAIC,WAAWD,EAAEjB,aAAY,EAGtD,OACE,oCACE,kBAACO,EAAD,KACGE,EAAMO,KAAI,SAACC,EAAGG,GAAJ,OACT,kBAAC,EAAD,eACEC,IAAKD,GACDH,EAFN,CAGEzB,KAAM,CAACsB,KAAKQ,MAAML,EAAElB,MAAQc,GAAQC,KAAKQ,MAAML,EAAEjB,OAASmB,IAC1DlB,QAAS,WApBjBW,EAoBoCQ,WAIlC,kBAAC,IAAD,KACGT,GAAgB,GACf,kBAAC,IAAD,CAAOY,QAvBO,WACpBX,GAAiB,KAuBT,kBAAC,IAAD,CACEY,aAAcb,EACdc,MAAOhB,EAAMO,KAAI,kBAAsC,CACrDU,IADe,EAAG/B,MAASS,MAASD,MACzBuB,c,YC3CrBC,EAAgBrC,IAAOC,IAAV,6EAAGD,CAAH,kGA4BJsC,EApBC,SAAC,GAAD,IAAgCC,EAAhC,EAAGA,KAAQC,oBAAX,OACd,kBAACH,EAAD,KACE,kBAACI,EAAA,EAAD,KACE,4BAAKF,EAAKG,YAAYpC,OACrBiC,EAAKI,MACJ,uBACEC,wBAAyB,CACvBC,OAAQN,EAAKI,QAInB,kBAAC,EAAD,CAAMxB,MAAOoB,EAAKG,YAAYI,aC1BrB,GACb,UACA,6BACA,oBACA,SC8BWC,GAFEC,UAtBG,SAAC,GAAD,IAEHC,EAFG,EAChBC,KACEC,QAAWF,MAFG,OAKhB,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK/C,MAAO,SAAUgD,MAAM,IAC3BC,EACE7B,KAAI,SAAAC,GAAC,OACJsB,EAAMO,MAAK,SAAAC,GAAC,OAAIA,EAAElB,KAAKC,oBAAoBE,YAAYgB,KAAO/B,QAE/DgC,QAAO,SAAAhC,GAAC,QAAMA,KACdD,KAAI,SAACC,EAAGG,GAAJ,OACH,kBAAC,EAAD,eAASC,IAAKD,GAASH,SAWb","file":"component---src-pages-index-js-a10916e8dd1df73902ee.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image/withIEPolyfill';\n\nconst StyledItem = styled.div`\n  grid-row-end: span ${({ span }) => span[1]};\n  grid-column-end: span ${({ span }) => span[0]};\n  @media (max-width: 726px) {\n    & {\n      grid-column-end: span ${({ span }) => (span[0] > 2 ? 2 : span[0])};\n    }\n  }\n  @media (max-width: 490px) {\n    & {\n      grid-column-end: span 1;\n    }\n  }\n  a {\n    cursor: pointer;\n  }\n`;\n\nconst StyledMeta = styled.div`\n  margin: 0.7rem auto 0;\n  width: fit-content;\n  h3 {\n    font-size: 12px;\n    margin: 0;\n  }\n  p {\n    font-size: 12px;\n  }\n`;\n\nconst Item = ({\n  image,\n  title,\n  technic,\n  year,\n  span,\n  width,\n  height,\n  onClick,\n}) => (\n  <StyledItem span={span}>\n    <a role={'button'} onClick={onClick}>\n      <Img fluid={image.sharp.fluid} objectFit={'cover'} alt={title} />\n    </a>\n    <StyledMeta>\n      <h3>{title}</h3>\n      <p>\n        {width != null && height != null && `${width}x${height}. `}\n        {technic}. {year}\n      </p>\n    </StyledMeta>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  image: PropTypes.object,\n  title: PropTypes.string,\n  technic: PropTypes.string,\n  year: PropTypes.number,\n  size: PropTypes.string,\n  onClick: PropTypes.func,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  span: PropTypes.array,\n};\n\nexport default Item;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nimport Item from './Item';\n\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-gap: 2rem;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-auto-flow: row dense;\n  // align-items: center;\n  // justify-content: center;\n`;\n\nconst Grid = ({ items }) => {\n  const [currentImage, setCurrentImage] = useState(-1);\n\n  const openLightbox = index => {\n    setCurrentImage(index);\n  };\n\n  const closeLightbox = () => {\n    setCurrentImage(-1);\n  };\n\n  const [spanX, spanY] = [\n    Math.max(...items.map(x => parseFloat(x.width))) / 3,\n    Math.max(...items.map(x => parseFloat(x.height))) / 2,\n  ];\n\n  return (\n    <>\n      <StyledGrid>\n        {items.map((x, idx) => (\n          <Item\n            key={idx}\n            {...x}\n            span={[Math.round(x.width / spanX), Math.round(x.height / spanY)]}\n            onClick={() => openLightbox(idx)}\n          />\n        ))}\n      </StyledGrid>\n      <ModalGateway>\n        {currentImage >= 0 && (\n          <Modal onClose={closeLightbox}>\n            <Carousel\n              currentIndex={currentImage}\n              views={items.map(({ image: { sharp: { fluid } } }) => ({\n                src: fluid.src,\n              }))}\n            />\n          </Modal>\n        )}\n      </ModalGateway>\n    </>\n  );\n};\n\nGrid.propTypes = {\n  items: PropTypes.array,\n};\n\nexport default Grid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Grid from './Grid';\nimport Container from '../Container';\n\nconst StyledArtwork = styled.div`\n  padding-bottom: 1rem;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  &:last-child {\n    border-bottom: 0px;\n  }\n`;\n\nconst Artwork = ({ node: { childMarkdownRemark: node } }) => (\n  <StyledArtwork>\n    <Container>\n      <h2>{node.frontmatter.title}</h2>\n      {node.html && (\n        <p\n          dangerouslySetInnerHTML={{\n            __html: node.html,\n          }}\n        />\n      )}\n      <Grid items={node.frontmatter.artwork} />\n    </Container>\n  </StyledArtwork>\n);\n\nArtwork.propTypes = {\n  node: PropTypes.object,\n};\n\nexport default Artwork;\n","export default [\n  'el-cabo',\n  'el-principio-de-arquimedes',\n  'la-forma-del-agua',\n  'otros',\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Artwork from '../components/artwork/Artwork';\n\nimport order from '../../data/artwork/order';\n\nconst IndexPage = ({\n  data: {\n    allFile: { edges },\n  },\n}) => (\n  <Layout>\n    <SEO title={'Inicio'} home={true} />\n    {order\n      .map(x =>\n        edges.find(y => y.node.childMarkdownRemark.frontmatter.id === x)\n      )\n      .filter(x => !!x)\n      .map((x, idx) => (\n        <Artwork key={idx} {...x} />\n      ))}\n  </Layout>\n);\n\nIndexPage.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    allFile(\n      filter: { sourceInstanceName: { eq: \"artwork\" }, extension: { eq: \"md\" } }\n      sort: { fields: childMarkdownRemark___frontmatter___year, order: DESC }\n    ) {\n      edges {\n        node {\n          childMarkdownRemark {\n            html\n            frontmatter {\n              id\n              title\n              artwork {\n                image {\n                  sharp: childImageSharp {\n                    fluid(quality: 80) {\n                      ...GatsbyImageSharpFluid_withWebp\n                    }\n                  }\n                }\n                title\n                year\n                width\n                height\n                technic\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}